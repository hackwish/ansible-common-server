---
- name: Instala packages adicionales
  apt: 
    name: "{{ packages }}"
  vars:
    packages:
      - linux-headers-generic
      - python-packaging
      - language-pack-es
    state: present
  register: common_aditional_installation
  ignore_errors: true
  when: ansible_distribution == 'Ubuntu'

# - name: install/upgrade pip package, force upgrade
#   pip:
#     name: pip
#     # executable: pip
#     state: latest
#   ignore_errors: true
#   delegate_to: localhost
#   become: false

# - name: install/upgrade pip3 package, force upgrade
#   pip:
#     name: pip
#     # executable: pip3
#     state: latest
#   ignore_errors: true
#   delegate_to: localhost
#   become: false

- name: Ensure python OpenSSL dependencies are installed.
  pip:
    name:
      - pyOpenSSL
      - cryptography
      - virtualenv
      - setuptools
    executable: pip3
    state: present
  delegate_to: localhost
  become: false

- name: Install the `unattended-upgrades` package
  package:
    name: unattended-upgrades
    state: present
  when: ansible_os_family == "Debian" or ansible_os_family == "Ubuntu"

- name: Copy the `20auto-upgrades` configuration file
  copy:
    src: ../templates/20auto-upgrades.j2
    dest: /etc/apt/apt.conf.d/20auto-upgrades
    owner: root
    group: root
    mode: 0644
  when: ansible_os_family == "Debian" or ansible_os_family == "Ubuntu"

#ENABLE IPTABLES PERSISTENCE
- name: Install `netfilter-persistent` && `iptables-persistent` packages
  package:
    name: "{{item}}"
    state: present
  with_items:
     - iptables-persistent
     - netfilter-persistent
  when: ansible_os_family == "Debian" or ansible_os_family == "Ubuntu"

# Configure SELinux
- name: Put SELinux in permissive mode, logging actions that would be blocked.
  ansible.posix.selinux:
    policy: targeted
    state: permissive
  when: ansible_os_family == "RedHat"